rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isVendor() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'vendor';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Public read for products and categories
    match /products/{productId} {
      allow read: if true;
      allow create: if isAuthenticated() && (isAdmin() || isVendor());
      allow update: if isAuthenticated() && (isAdmin() || (isVendor() && resource.data.vendorId == request.auth.uid));
      allow delete: if isAdmin();
    }
    
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if true; // Allow user creation during signup
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Orders
    match /orders/{orderId} {
      allow read: if isAuthenticated() && 
        (isOwner(resource.data.customerId) || isOwner(resource.data.vendorId) || isAdmin());
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        (isOwner(resource.data.customerId) || isOwner(resource.data.vendorId) || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Chat messages
    match /chats/{chatId}/messages/{messageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isOwner(resource.data.senderId) || isAdmin();
      allow delete: if isAdmin();
    }
  }
}