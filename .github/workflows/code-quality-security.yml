# 🔍 **CODE QUALITY & SECURITY AUTOMATION**
# Professional Code Quality and Security Scanning for Souk El-Sayarat

name: 🔒 Code Quality & Security Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  CI: true
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  code-quality:
    name: 🧹 Code Quality Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        continue-on-error: true
        run: npm run lint

      - name: 🎨 Run Prettier check
        continue-on-error: true
        run: npm run format:check

      - name: 🧪 Run TypeScript check
        continue-on-error: true
        run: npm run type-check

      - name: 📊 Run tests
        continue-on-error: true
        run: npm run test:coverage

      - name: 💾 Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30

  dependency-security:
    name: 🔒 Dependency Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run npm audit
        run: npm audit --audit-level=moderate || echo "⚠️ npm audit found issues - continuing with workflow"

      - name: 🔍 Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: 💾 Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            snyk-report.json
            npm-audit.json
          retention-days: 30

  sast-scan:
    name: 🔍 SAST Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📦 Install Bandit
        run: pip install bandit

      - name: 🔍 Run Bandit security scan
        run: |
          bandit -r . -f json -o bandit-report.json || true
          bandit -r . -f txt -o bandit-report.txt || true

      - name: 🔍 Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/owasp-top-ten
            p/javascript
            p/typescript
            p/react
          output-format: sarif
          output-file: semgrep-results.sarif

      - name: 💾 Upload SAST reports
        uses: actions/upload-artifact@v4
        with:
          name: sast-reports
          path: |
            bandit-report.json
            bandit-report.txt
            semgrep-results.sarif
          retention-days: 30

  secrets-scanning:
    name: 🔐 Secrets Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        continue-on-error: true
        with:
          path: ./
          base: ${{ github.event.before }}
          head: ${{ github.event.after }}
          extra_args: --only-verified --format json --output trufflehog-results.json

      - name: 📦 Install Gitleaks
        run: |
          curl -sSfL https://raw.githubusercontent.com/gitleaks/gitleaks/master/scripts/install.sh | sh -s -- -b /usr/local/bin

      - name: 🔍 Run Gitleaks scan
        continue-on-error: true
        run: |
          gitleaks detect --source . --report-format json --report-path gitleaks-results.json --verbose || echo "⚠️ Gitleaks scan completed with findings"

      - name: 💾 Upload secrets scan reports
        uses: actions/upload-artifact@v4
        with:
          name: secrets-scan-reports
          path: |
            trufflehog-results.json
            gitleaks-results.json
          retention-days: 30

  dast-scan:
    name: 🌐 DAST Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📦 Install OWASP ZAP
        run: |
          wget https://github.com/zaproxy/zaproxy/releases/download/v2.15.0/ZAP_2.15.0_Linux.tar.gz
          tar -xzf ZAP_2.15.0_Linux.tar.gz

      - name: 🔍 Run OWASP ZAP scan
        continue-on-error: true
        run: |
          ./ZAP_2.15.0/zap.sh -cmd -autorun zap.conf -dir zap-results || echo "⚠️ ZAP scan completed with issues"

      - name: 💾 Upload DAST reports
        uses: actions/upload-artifact@v4
        with:
          name: dast-reports
          path: zap-results/
          retention-days: 30

  infrastructure-security:
    name: 🏗️ Infrastructure Security
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./
          framework: terraform,kubernetes,cloudformation,arm,serverless,helm
          output: sarif
          output-file-path: checkov-results.sarif

      - name: 🔍 Run Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: 💾 Upload infrastructure security reports
        uses: actions/upload-artifact@v4
        with:
          name: infrastructure-security-reports
          path: |
            checkov-results.sarif
            trivy-results.sarif
          retention-days: 30

  security-reporting:
    name: 📊 Security Reporting
    runs-on: ubuntu-latest
    needs: [code-quality, dependency-security, sast-scan, secrets-scanning, dast-scan, infrastructure-security]
    timeout-minutes: 10
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download all security reports
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          path: security-reports/

      - name: 📊 Generate security summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "Generated: $(date)" >> security-summary.md
          echo "" >> security-summary.md
          echo "## Scan Results" >> security-summary.md
          echo "- Code Quality: ${{ needs.code-quality.result }}" >> security-summary.md
          echo "- Dependency Security: ${{ needs.dependency-security.result }}" >> security-summary.md
          echo "- SAST Scan: ${{ needs.sast-scan.result }}" >> security-summary.md
          echo "- Secrets Scanning: ${{ needs.secrets-scanning.result }}" >> security-summary.md
          echo "- DAST Scan: ${{ needs.dast-scan.result }}" >> security-summary.md
          echo "- Infrastructure Security: ${{ needs.infrastructure-security.result }}" >> security-summary.md

      - name: 💾 Upload security summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 30

      - name: 📧 Send security report (if configured)
        if: env.SLACK_WEBHOOK_URL != ''
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Security scan completed for ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Results: ${{ needs.code-quality.result }}, ${{ needs.dependency-security.result }}, ${{ needs.sast-scan.result }}, ${{ needs.secrets-scanning.result }}, ${{ needs.dast-scan.result }}, ${{ needs.infrastructure-security.result }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
