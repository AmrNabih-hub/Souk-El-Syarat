import{g as e,s as t,h as r}from"./utils-vendor-Bjc_0iGC.js";const s=(t,r,s)=>{if(t&&"reportValidity"in t){const n=e(s,r);t.setCustomValidity(n&&n.message||""),t.reportValidity()}},n=(e,t)=>{for(const r in t.fields){const n=t.fields[r];n&&n.ref&&"reportValidity"in n.ref?s(n.ref,r,e):n.refs&&n.refs.forEach(t=>s(t,r,e))}},i=(r,s)=>{s.shouldUseNativeValidation&&n(r,s);const i={};for(const n in r){const a=e(s.fields,n),c=Object.assign(r[n]||{},{ref:a&&a.ref});if(o(s.names||Object.keys(r),n)){const r=Object.assign({},e(i,n));t(r,"root",c),t(i,n,r)}else t(i,n,c)}return i},o=(e,t)=>e.some(e=>e.startsWith(t+"."));function a(e,t,s){return void 0===t&&(t={}),void 0===s&&(s={}),function(o,a,c){try{return Promise.resolve(function(r,i){try{var f=(t.context,Promise.resolve(e["sync"===s.mode?"validateSync":"validate"](o,Object.assign({abortEarly:!1},t,{context:a}))).then(function(e){return c.shouldUseNativeValidation&&n({},c),{values:s.raw?o:e,errors:{}}}))}catch(l){return i(l)}return f&&f.then?f.then(void 0,i):f}(0,function(e){if(!e.inner)throw e;return{values:{},errors:i((t=e,s=!c.shouldUseNativeValidation&&"all"===c.criteriaMode,(t.inner||[]).reduce(function(e,t){if(e[t.path]||(e[t.path]={message:t.message,type:t.type}),s){var n=e[t.path].types,i=n&&n[t.type];e[t.path]=r(t.path,s,e,t.type,i?[].concat(i,t.message):t.message)}return e},{})),c)};var t,s}))}catch(f){return Promise.reject(f)}}}export{a as o};
